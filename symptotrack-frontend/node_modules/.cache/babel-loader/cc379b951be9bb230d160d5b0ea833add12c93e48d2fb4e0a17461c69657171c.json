{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemas\\\\SymptoTrackAI\\\\symptotrack-frontend\\\\src\\\\components\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.tsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const [insights, setInsights] = useState([]);\n  const [symptomDescription, setSymptomDescription] = useState('');\n  useEffect(() => {\n    const fetchHealthInsights = async () => {\n      const userId = 1; // Replace with the actual user ID\n      const response = await axios.get(`http://localhost:5001/api/health-insights/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setInsights(response.data);\n    };\n    fetchHealthInsights();\n  }, [token]);\n  const handleSymptomLog = async e => {\n    e.preventDefault();\n    const userId = 1; // Replace with the actual user ID\n    await axios.post('http://localhost:5001/api/symptoms', {\n      userId,\n      symptomDescription\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setSymptomDescription('');\n    // Optionally, refresh insights\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Health Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: insights.map(insight => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: insight.insight\n      }, insight.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSymptomLog,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \" text\",\n        placeholder: \"Log your symptom\",\n        value: symptomDescription,\n        onChange: e => setSymptomDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log Symptom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"yZl6EYwpBw91WKuDF/CPDcyZniE=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","useAuth","jsxDEV","_jsxDEV","Dashboard","_s","token","insights","setInsights","symptomDescription","setSymptomDescription","fetchHealthInsights","userId","response","get","headers","Authorization","data","handleSymptomLog","e","preventDefault","post","children","fileName","_jsxFileName","lineNumber","columnNumber","map","insight","id","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/hemas/SymptoTrackAI/symptotrack-frontend/src/components/Dashboard.tsx"],"sourcesContent":["// src/components/Dashboard.tsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../AuthContext';\n\ninterface HealthInsight {\n    // Define the structure based on your health insights schema\n    id: number;\n    user_id: number;\n    insight: string; // Example field\n}\n\nconst Dashboard: React.FC = () => {\n    const { token } = useAuth();\n    const [insights, setInsights] = useState<HealthInsight[]>([]);\n    const [symptomDescription, setSymptomDescription] = useState('');\n\n    useEffect(() => {\n        const fetchHealthInsights = async () => {\n            const userId = 1; // Replace with the actual user ID\n            const response = await axios.get(`http://localhost:5001/api/health-insights/${userId}`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setInsights(response.data);\n        };\n\n        fetchHealthInsights();\n    }, [token]);\n\n    const handleSymptomLog = async (e: React.FormEvent) => {\n        e.preventDefault();\n        const userId = 1; // Replace with the actual user ID\n        await axios.post('http://localhost:5001/api/symptoms', { userId, symptomDescription }, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n        setSymptomDescription('');\n        // Optionally, refresh insights\n    };\n\n    return (\n        <div>\n            <h1>Health Insights</h1>\n            <ul>\n                {insights.map(insight => (\n                    <li key={insight.id}>{insight.insight}</li>\n                ))}\n            </ul>\n            <form onSubmit={handleSymptomLog}>\n                <input type=\" text\" placeholder=\"Log your symptom\" value={symptomDescription} onChange={(e) => setSymptomDescription(e.target.value)} required />\n                <button type=\"submit\">Log Symptom</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}