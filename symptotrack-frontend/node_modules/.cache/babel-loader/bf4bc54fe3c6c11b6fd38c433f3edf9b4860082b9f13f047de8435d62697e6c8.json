{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemas\\\\SymptoTrackAI\\\\symptotrack-frontend\\\\src\\\\components\\\\Register.tsx\",\n  _s = $RefreshSig$();\n// src/components/Register.tsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5001/api/register', formData);\n      console.log('Registration successful');\n      // Redirect to login or show a success message\n    } catch (error) {\n      console.error('Registration error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      onChange: e => setFormData({\n        ...formData,\n        name: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      onChange: e => setFormData({\n        ...formData,\n        email: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => setFormData({\n        ...formData,\n        password: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"AIthlPb+bZ9ZJUGoo6C67zUnu9I=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","email","password","handleSubmit","e","preventDefault","post","console","log","error","onSubmit","children","type","placeholder","onChange","target","value","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hemas/SymptoTrackAI/symptotrack-frontend/src/components/Register.tsx"],"sourcesContent":["// src/components/Register.tsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Register: React.FC = () => {\n    const [formData, setFormData] = useState({ name: '', email: '', password: '' });\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        try {\n            await axios.post('http://localhost:5001/api/register', formData);\n            console.log('Registration successful');\n            // Redirect to login or show a success message\n        } catch (error) {\n            console.error('Registration error:', error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"Name\" onChange={(e) => setFormData({ ...formData, name: e.target.value })} required />\n            <input type=\"email\" placeholder=\"Email\" onChange={(e) => setFormData({ ...formData, email: e.target.value })} required />\n            <input type=\"password\" placeholder=\"Password\" onChange={(e) => setFormData({ ...formData, password: e.target.value })} required />\n            <button type=\"submit\">Register</button>\n        </form>\n    );\n};\n\nexport default Register;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE/E,MAAMC,YAAY,GAAG,MAAOC,CAAkB,IAAK;IAC/CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMZ,KAAK,CAACa,IAAI,CAAC,oCAAoC,EAAER,QAAQ,CAAC;MAChES,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACId,OAAA;IAAMe,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBACzBhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,MAAM;MAACC,QAAQ,EAAGV,CAAC,IAAKL,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,IAAI,EAAEI,CAAC,CAACW,MAAM,CAACC;MAAM,CAAC,CAAE;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtH1B,OAAA;MAAOiB,IAAI,EAAC,OAAO;MAACC,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAGV,CAAC,IAAKL,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEG,KAAK,EAAEG,CAAC,CAACW,MAAM,CAACC;MAAM,CAAC,CAAE;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzH1B,OAAA;MAAOiB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAGV,CAAC,IAAKL,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEI,QAAQ,EAAEE,CAAC,CAACW,MAAM,CAACC;MAAM,CAAC,CAAE;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClI1B,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEf,CAAC;AAACxB,EAAA,CAtBID,QAAkB;AAAA0B,EAAA,GAAlB1B,QAAkB;AAwBxB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}